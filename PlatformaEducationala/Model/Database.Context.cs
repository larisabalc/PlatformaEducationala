//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace PlatformaEducationala.Model
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class MVP_PlatformaEducationalaEntities : DbContext
    {
        public MVP_PlatformaEducationalaEntities()
            : base("name=MVP_PlatformaEducationalaEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Absenta> Absentas { get; set; }
        public virtual DbSet<Clasa> Clasas { get; set; }
        public virtual DbSet<Materie> Materies { get; set; }
        public virtual DbSet<Medie> Medies { get; set; }
        public virtual DbSet<Nota> Notas { get; set; }
        public virtual DbSet<Specializare> Specializares { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<TipUtilizator> TipUtilizators { get; set; }
        public virtual DbSet<Utilizator> Utilizators { get; set; }
    
        public virtual int AddAbsenta(Nullable<int> subjectId, string date, Nullable<int> semester, Nullable<bool> canBeMotivata, Nullable<bool> excused, Nullable<int> studentId)
        {
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var semesterParameter = semester.HasValue ?
                new ObjectParameter("semester", semester) :
                new ObjectParameter("semester", typeof(int));
    
            var canBeMotivataParameter = canBeMotivata.HasValue ?
                new ObjectParameter("canBeMotivata", canBeMotivata) :
                new ObjectParameter("canBeMotivata", typeof(bool));
    
            var excusedParameter = excused.HasValue ?
                new ObjectParameter("excused", excused) :
                new ObjectParameter("excused", typeof(bool));
    
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddAbsenta", subjectIdParameter, dateParameter, semesterParameter, canBeMotivataParameter, excusedParameter, studentIdParameter);
        }
    
        public virtual int AddClasa(Nullable<int> specializationId, Nullable<int> year, string name)
        {
            var specializationIdParameter = specializationId.HasValue ?
                new ObjectParameter("specializationId", specializationId) :
                new ObjectParameter("specializationId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddClasa", specializationIdParameter, yearParameter, nameParameter);
        }
    
        public virtual int AddDiriginteClasaLink(Nullable<int> classMasterId, Nullable<int> classroomId)
        {
            var classMasterIdParameter = classMasterId.HasValue ?
                new ObjectParameter("classMasterId", classMasterId) :
                new ObjectParameter("classMasterId", typeof(int));
    
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddDiriginteClasaLink", classMasterIdParameter, classroomIdParameter);
        }
    
        public virtual int AddMaterie(string name, Nullable<bool> thesis)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var thesisParameter = thesis.HasValue ?
                new ObjectParameter("thesis", thesis) :
                new ObjectParameter("thesis", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMaterie", nameParameter, thesisParameter);
        }
    
        public virtual int AddMaterieClasaLink(Nullable<int> subjectId, Nullable<int> classroomId)
        {
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMaterieClasaLink", subjectIdParameter, classroomIdParameter);
        }
    
        public virtual int AddMaterieProfesorLink(Nullable<int> subjectId, Nullable<int> teacherId)
        {
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("teacherId", teacherId) :
                new ObjectParameter("teacherId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddMaterieProfesorLink", subjectIdParameter, teacherIdParameter);
        }
    
        public virtual int AddNota(Nullable<int> subjectId, Nullable<int> value, string date, Nullable<int> semester, Nullable<int> studentId, Nullable<bool> boolEsteTeza)
        {
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            var valueParameter = value.HasValue ?
                new ObjectParameter("value", value) :
                new ObjectParameter("value", typeof(int));
    
            var dateParameter = date != null ?
                new ObjectParameter("date", date) :
                new ObjectParameter("date", typeof(string));
    
            var semesterParameter = semester.HasValue ?
                new ObjectParameter("semester", semester) :
                new ObjectParameter("semester", typeof(int));
    
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            var boolEsteTezaParameter = boolEsteTeza.HasValue ?
                new ObjectParameter("boolEsteTeza", boolEsteTeza) :
                new ObjectParameter("boolEsteTeza", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddNota", subjectIdParameter, valueParameter, dateParameter, semesterParameter, studentIdParameter, boolEsteTezaParameter);
        }
    
        public virtual int AddProfesorClasaLink(Nullable<int> teacherId, Nullable<int> classroomId)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("teacherId", teacherId) :
                new ObjectParameter("teacherId", typeof(int));
    
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddProfesorClasaLink", teacherIdParameter, classroomIdParameter);
        }
    
        public virtual int AddSpecializare(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddSpecializare", nameParameter);
        }
    
        public virtual int AddStudentClasaLink(Nullable<int> studentId, Nullable<int> classroomId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddStudentClasaLink", studentIdParameter, classroomIdParameter);
        }
    
        public virtual int AddTipUtilizator(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddTipUtilizator", nameParameter);
        }
    
        public virtual int AddUtilizator(string name, string username, string password, Nullable<int> typeId)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            var typeIdParameter = typeId.HasValue ?
                new ObjectParameter("typeId", typeId) :
                new ObjectParameter("typeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("AddUtilizator", nameParameter, usernameParameter, passwordParameter, typeIdParameter);
        }
    
        public virtual int DeleteClasa(Nullable<int> classroomId)
        {
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteClasa", classroomIdParameter);
        }
    
        public virtual int DeleteDiriginteClasaLink(Nullable<int> classMasterId)
        {
            var classMasterIdParameter = classMasterId.HasValue ?
                new ObjectParameter("classMasterId", classMasterId) :
                new ObjectParameter("classMasterId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteDiriginteClasaLink", classMasterIdParameter);
        }
    
        public virtual int DeleteMaterie(Nullable<int> subjectId)
        {
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMaterie", subjectIdParameter);
        }
    
        public virtual int DeleteMaterieClasaLink(Nullable<int> subjectId, Nullable<int> classroomId)
        {
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMaterieClasaLink", subjectIdParameter, classroomIdParameter);
        }
    
        public virtual int DeleteMaterieProfesorLink(Nullable<int> subjectId, Nullable<int> teacherId)
        {
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("teacherId", teacherId) :
                new ObjectParameter("teacherId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteMaterieProfesorLink", subjectIdParameter, teacherIdParameter);
        }
    
        public virtual int DeleteNota(Nullable<int> markId)
        {
            var markIdParameter = markId.HasValue ?
                new ObjectParameter("markId", markId) :
                new ObjectParameter("markId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteNota", markIdParameter);
        }
    
        public virtual int DeleteProfesorClasaLink(Nullable<int> teacherId, Nullable<int> classroomId)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("teacherId", teacherId) :
                new ObjectParameter("teacherId", typeof(int));
    
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteProfesorClasaLink", teacherIdParameter, classroomIdParameter);
        }
    
        public virtual int DeleteSpecializare(Nullable<int> specializationId)
        {
            var specializationIdParameter = specializationId.HasValue ?
                new ObjectParameter("specializationId", specializationId) :
                new ObjectParameter("specializationId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteSpecializare", specializationIdParameter);
        }
    
        public virtual int DeleteStudentClasaLink(Nullable<int> studentId, Nullable<int> classroomId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteStudentClasaLink", studentIdParameter, classroomIdParameter);
        }
    
        public virtual int DeleteTipUtilizator(Nullable<int> userTypeId)
        {
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("userTypeId", userTypeId) :
                new ObjectParameter("userTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteTipUtilizator", userTypeIdParameter);
        }
    
        public virtual int DeleteUtilizator(Nullable<int> userId)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("DeleteUtilizator", userIdParameter);
        }
    
        public virtual int ExcuseAbsenta(Nullable<int> absenceId)
        {
            var absenceIdParameter = absenceId.HasValue ?
                new ObjectParameter("absenceId", absenceId) :
                new ObjectParameter("absenceId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExcuseAbsenta", absenceIdParameter);
        }
    
        public virtual ObjectResult<GetAbsentasForAMaterie_Result> GetAbsentasForAMaterie(Nullable<int> studentId, Nullable<int> subjectId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAbsentasForAMaterie_Result>("GetAbsentasForAMaterie", studentIdParameter, subjectIdParameter);
        }
    
        public virtual ObjectResult<GetAbsentasForStudentForMaterie_Result> GetAbsentasForStudentForMaterie(Nullable<int> studentId, Nullable<int> subjectId, Nullable<int> semester)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            var semesterParameter = semester.HasValue ?
                new ObjectParameter("semester", semester) :
                new ObjectParameter("semester", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAbsentasForStudentForMaterie_Result>("GetAbsentasForStudentForMaterie", studentIdParameter, subjectIdParameter, semesterParameter);
        }
    
        public virtual ObjectResult<GetAbsentasPerClasa_Result> GetAbsentasPerClasa(Nullable<int> classroomId)
        {
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAbsentasPerClasa_Result>("GetAbsentasPerClasa", classroomIdParameter);
        }
    
        public virtual ObjectResult<GetAllAbsentasForStudent_Result> GetAllAbsentasForStudent(Nullable<int> studentId, Nullable<int> semester)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            var semesterParameter = semester.HasValue ?
                new ObjectParameter("semester", semester) :
                new ObjectParameter("semester", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllAbsentasForStudent_Result>("GetAllAbsentasForStudent", studentIdParameter, semesterParameter);
        }
    
        public virtual ObjectResult<GetAllClasas_Result> GetAllClasas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllClasas_Result>("GetAllClasas");
        }
    
        public virtual ObjectResult<GetAllDiriginteClasaLinks_Result> GetAllDiriginteClasaLinks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllDiriginteClasaLinks_Result>("GetAllDiriginteClasaLinks");
        }
    
        public virtual ObjectResult<GetAllMaterieClasaLinks_Result> GetAllMaterieClasaLinks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMaterieClasaLinks_Result>("GetAllMaterieClasaLinks");
        }
    
        public virtual ObjectResult<GetAllMaterieProfesorLinks_Result> GetAllMaterieProfesorLinks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMaterieProfesorLinks_Result>("GetAllMaterieProfesorLinks");
        }
    
        public virtual ObjectResult<GetAllMateries_Result> GetAllMateries()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllMateries_Result>("GetAllMateries");
        }
    
        public virtual ObjectResult<GetAllNotas_Result> GetAllNotas()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllNotas_Result>("GetAllNotas");
        }
    
        public virtual ObjectResult<GetAllProfesorClasaLinks_Result> GetAllProfesorClasaLinks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllProfesorClasaLinks_Result>("GetAllProfesorClasaLinks");
        }
    
        public virtual ObjectResult<GetAllSpecializares_Result> GetAllSpecializares()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllSpecializares_Result>("GetAllSpecializares");
        }
    
        public virtual ObjectResult<GetAllStudentClasaLinks_Result> GetAllStudentClasaLinks()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStudentClasaLinks_Result>("GetAllStudentClasaLinks");
        }
    
        public virtual ObjectResult<GetAllTipUtilizators_Result> GetAllTipUtilizators()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllTipUtilizators_Result>("GetAllTipUtilizators");
        }
    
        public virtual ObjectResult<GetAllUtilizators_Result> GetAllUtilizators()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllUtilizators_Result>("GetAllUtilizators");
        }
    
        public virtual ObjectResult<Nullable<int>> GetClasaIdForStudent(Nullable<int> studentId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("GetClasaIdForStudent", studentIdParameter);
        }
    
        public virtual ObjectResult<GetDiriginteClasa_Result> GetDiriginteClasa(Nullable<int> teacherId)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("teacherId", teacherId) :
                new ObjectParameter("teacherId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetDiriginteClasa_Result>("GetDiriginteClasa", teacherIdParameter);
        }
    
        public virtual ObjectResult<GetMateriesForProfesorForSelectedClasa_Result> GetMateriesForProfesorForSelectedClasa(Nullable<int> teacherId, Nullable<int> classroomId)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("teacherId", teacherId) :
                new ObjectParameter("teacherId", typeof(int));
    
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMateriesForProfesorForSelectedClasa_Result>("GetMateriesForProfesorForSelectedClasa", teacherIdParameter, classroomIdParameter);
        }
    
        public virtual ObjectResult<GetMateriesFromClasa_Result> GetMateriesFromClasa(Nullable<int> classroomId)
        {
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMateriesFromClasa_Result>("GetMateriesFromClasa", classroomIdParameter);
        }
    
        public virtual ObjectResult<GetMediesForStudent_Result> GetMediesForStudent(Nullable<int> studentId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetMediesForStudent_Result>("GetMediesForStudent", studentIdParameter);
        }
    
        public virtual ObjectResult<GetNotasForAMaterie_Result> GetNotasForAMaterie(Nullable<int> studentId, Nullable<int> subjectId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotasForAMaterie_Result>("GetNotasForAMaterie", studentIdParameter, subjectIdParameter);
        }
    
        public virtual ObjectResult<GetNotasForStudent_Result> GetNotasForStudent(Nullable<int> studentId, Nullable<int> subjectId, Nullable<int> semester)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            var semesterParameter = semester.HasValue ?
                new ObjectParameter("semester", semester) :
                new ObjectParameter("semester", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetNotasForStudent_Result>("GetNotasForStudent", studentIdParameter, subjectIdParameter, semesterParameter);
        }
    
        public virtual ObjectResult<GetProfesorsClasas_Result> GetProfesorsClasas(Nullable<int> teacherId)
        {
            var teacherIdParameter = teacherId.HasValue ?
                new ObjectParameter("teacherId", teacherId) :
                new ObjectParameter("teacherId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetProfesorsClasas_Result>("GetProfesorsClasas", teacherIdParameter);
        }
    
        public virtual ObjectResult<GetStudentsFromClasa_Result> GetStudentsFromClasa(Nullable<int> classroomId)
        {
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStudentsFromClasa_Result>("GetStudentsFromClasa", classroomIdParameter);
        }
    
        public virtual ObjectResult<string> GetTipUtilizator(Nullable<int> userTypeId)
        {
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("userTypeId", userTypeId) :
                new ObjectParameter("userTypeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetTipUtilizator", userTypeIdParameter);
        }
    
        public virtual ObjectResult<GetUnexcusedAbsentasForStudent_Result> GetUnexcusedAbsentasForStudent(Nullable<int> studentId, Nullable<int> semester)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            var semesterParameter = semester.HasValue ?
                new ObjectParameter("semester", semester) :
                new ObjectParameter("semester", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUnexcusedAbsentasForStudent_Result>("GetUnexcusedAbsentasForStudent", studentIdParameter, semesterParameter);
        }
    
        public virtual ObjectResult<GetUnexcusedAbsentasPerClasa_Result> GetUnexcusedAbsentasPerClasa(Nullable<int> classroomId)
        {
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUnexcusedAbsentasPerClasa_Result>("GetUnexcusedAbsentasPerClasa", classroomIdParameter);
        }
    
        public virtual ObjectResult<GetUtilizator_Result> GetUtilizator(string username, string password)
        {
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetUtilizator_Result>("GetUtilizator", usernameParameter, passwordParameter);
        }
    
        public virtual int MakeMedie(Nullable<int> semester, Nullable<int> subjectId, Nullable<int> studentId)
        {
            var semesterParameter = semester.HasValue ?
                new ObjectParameter("semester", semester) :
                new ObjectParameter("semester", typeof(int));
    
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("MakeMedie", semesterParameter, subjectIdParameter, studentIdParameter);
        }
    
        public virtual int ModifyClasa(Nullable<int> classroomId, Nullable<int> specializationId, Nullable<int> year, string name)
        {
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            var specializationIdParameter = specializationId.HasValue ?
                new ObjectParameter("specializationId", specializationId) :
                new ObjectParameter("specializationId", typeof(int));
    
            var yearParameter = year.HasValue ?
                new ObjectParameter("year", year) :
                new ObjectParameter("year", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifyClasa", classroomIdParameter, specializationIdParameter, yearParameter, nameParameter);
        }
    
        public virtual int ModifyDiriginteClasaLink(Nullable<int> classMasterId, Nullable<int> classroomId)
        {
            var classMasterIdParameter = classMasterId.HasValue ?
                new ObjectParameter("classMasterId", classMasterId) :
                new ObjectParameter("classMasterId", typeof(int));
    
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifyDiriginteClasaLink", classMasterIdParameter, classroomIdParameter);
        }
    
        public virtual int ModifyMaterie(Nullable<int> subjectId, string name, Nullable<bool> thesis)
        {
            var subjectIdParameter = subjectId.HasValue ?
                new ObjectParameter("subjectId", subjectId) :
                new ObjectParameter("subjectId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var thesisParameter = thesis.HasValue ?
                new ObjectParameter("thesis", thesis) :
                new ObjectParameter("thesis", typeof(bool));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifyMaterie", subjectIdParameter, nameParameter, thesisParameter);
        }
    
        public virtual int ModifySpecializare(Nullable<int> specializationId, string name)
        {
            var specializationIdParameter = specializationId.HasValue ?
                new ObjectParameter("specializationId", specializationId) :
                new ObjectParameter("specializationId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifySpecializare", specializationIdParameter, nameParameter);
        }
    
        public virtual int ModifyStudentClasaLink(Nullable<int> studentId, Nullable<int> classroomId)
        {
            var studentIdParameter = studentId.HasValue ?
                new ObjectParameter("studentId", studentId) :
                new ObjectParameter("studentId", typeof(int));
    
            var classroomIdParameter = classroomId.HasValue ?
                new ObjectParameter("classroomId", classroomId) :
                new ObjectParameter("classroomId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifyStudentClasaLink", studentIdParameter, classroomIdParameter);
        }
    
        public virtual int ModifyTipUtilizator(Nullable<int> userTypeId, string name)
        {
            var userTypeIdParameter = userTypeId.HasValue ?
                new ObjectParameter("userTypeId", userTypeId) :
                new ObjectParameter("userTypeId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifyTipUtilizator", userTypeIdParameter, nameParameter);
        }
    
        public virtual int ModifyUtilizator(Nullable<int> userId, string name, string username, string password)
        {
            var userIdParameter = userId.HasValue ?
                new ObjectParameter("userId", userId) :
                new ObjectParameter("userId", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            var passwordParameter = password != null ?
                new ObjectParameter("password", password) :
                new ObjectParameter("password", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ModifyUtilizator", userIdParameter, nameParameter, usernameParameter, passwordParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    }
}
